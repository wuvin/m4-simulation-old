<launch>
  <param
    name="robot_description"
    textfile="$(find m4assembly)/urdf/m4assembly_morphed_fixed_with_ardupilot.urdf" />
  
  <arg name="gui" default="true"/>
  <arg name="world_name" default="terrain_1"/>
  
   <!-- world_launch-->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find gazebo_uneven_terrain)/worlds/$(arg world_name).world"/>
    <arg name="verbose" value="true"/>
    <arg name="gui" value="$(arg gui)"/>
     <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>
  
  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />

  <!--spawn robot in gazebo -->
  <node name="spawn_model" pkg="gazebo_ros" type="spawn_model" 
  	args="-z 0.2 -file $(find m4assembly)/urdf/m4assembly_morphed_fixed_with_ardupilot.urdf -urdf -model iris" output="screen" />
  	
  <!-- load the controllers -->
  <rosparam file="$(find m4assembly)/config/controller_config.yaml" command="load"/>
  
  <node 
      name="controller_spawner" 
      pkg ="controller_manager" 
      type="spawner"
      ns="/m4assembly"  
      args="wheel_velocity_controller   
            joint_state_controller "/>
  	
  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
   <remap from="/joint_states" to="/m4assembly/joint_states" />
  </node>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
  </node>
  <include file="$(find odom2tf)/launch/odom2tf.launch"/>
</launch>
